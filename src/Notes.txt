1. There can be only one "public class" in a package and the name of the class having main method must be same as the
   name of the public class

2. In the example, Person is the blueprint and multiple persons can be made by the help of the same Person class.
3. "p1" is the object of Person class.
4. eat() and walk() are methods of Person class.
5. THERE CAN BE MULTIPLE METHODS WITH THE SAME NAME BUT DIFFERENT ARGUMENTS- This is called POLYMORPHISM
6. POLYMORPHISM: Greek word which means many forms.
   It is of two types: Compile time (when there are two methods with the same name and different parameters at the same level) and
   run time (when there are two methods of the same name but they are at different inheritance levels).
7. A default constructor is always provided by JAVA
8. Whatever we use after new is a constructor and it simply helps in constructing the object of a class.
9. "static" whenever static keyword is used, it makes the variable the property of the class instead of the property of the object.
10. Use the static keyword wherever you're trying to make a property which is independent of the object and is constant for a class and doesn't depend on the object.
11. Overriding the constructor by using the same name of the constructor but different parameters.
12. "this()" keyword: whenever we want to call a constructor from another constructor, we use this keyword.
13. "this." keyword: is used when we want to make sure that we use the variable of a particular class, i.e. the variable of this class is equal to the incoming argument.
14. INHERITANCE: inheriting the properties of the parent class.
15. "super" keyword is used to call the constructor of the parent.
16. In the code, whenever a new Developer is created, it makes a person automatically as well with the use of the super keyword
    that means when the developer is created, the super keyword passes the name and the age of the developer to the parent class,
    which in this case is Person class and hence it creates a person as well.
17. With the help of "this" keyword, we can access the properties of the current class and with the help of the super keyword,
    we can access the properties of the super/parent class.
18. Because of inheritance, developer would also get access to all the properties, functions and the methods of the instant parent class.
19. There can be multiple inheritance levels and the class inheriting the maximum number of classes will have the maximum access of the above methods.
20. For the functions being called, when the function being called is not in that particular method, it goes to the nearest
    parent and looks for the function in that parent.
21. In the code, it checks for the walk function in the Developer class, but doesn't find it and hence it goes to the Person class
    to look for the walk function and if it was not present in the Person class, it would go to the next class to look for the walk function.
22. For all the objects in Java, the parent of all the objects is Object Class.
23. Encapsulation: means encapsulating all the methods and properties which are working on a method altogether.
24. Packages and access modifiers: Naming convention: The name of all the packages should start with a lowe case letter and should also
    follow the camel case notation.
25. If a method is public, then we're able to call the object of another package in our package.
26. If we remove the work public, then that method won't be visible, and if the word public is not used in the package, then the
    method won't be visible to any other package as well. It'd be available in it's children packages, but won't be available in the packages outside the package.
27. If we change the access modifier to private, it means that we'd be able to get the method just in that class, even not in the same package.
    It makes the method class specific rather than making it accesible for the rest of the package.
28.

